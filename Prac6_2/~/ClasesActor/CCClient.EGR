[Version Actor SW]
5
0
0
0
0
[Modificado]
1
1
0
[Estructura]
[Version Estructura]
3
[Parametro]
NULL
 
 
[FinParametro]
[Stack]
1
[FinStack]
[Puertos]
3
[Version Puerto]
0
pServReq
0
1
0
[Version Grafico Puerto]
0
4
44
CPService
[Version Puerto]
0
Timer
0
1
1
[Version Grafico Puerto]
0
28
44
EDROOMTimingSAP
[Version Puerto]
0
Timer2
0
1
1
[Version Grafico Puerto]
0
28
62
EDROOMTimingSAP
[FinPuertos]
[ActoresComponente]
0
[FinActoresComponente]
[Uniones]
0
[FinUniones]
[NumTimers]
4
[FinNumTimers]
[NumMsgDef]
10
[FinNumMsgDef]
[FinEstructura]
[Comportamiento]
[Version Comportamiento]
3
0
[Pools]
1
[Version PoolDatosMens]
0
EDROOMPoolTEDROOMUInt8
TEDROOMUInt8
10
[Modulos]
0
[Eventos]
2
[Event]
[Version]
1
EvTimerTimer
Timer
[Event]
[Version]
1
EvTimerTimer2
Timer
[Maquina de Estados]
[Version Maquina de Estados]
1
Top
NULL
[Subestados]
4
[Version SubEstados]
3
I
;
;
;
;
;
0
0
[ObjetoGrafico]
[Version Objeto Grafico]
0
73 73 55 55
[FinObjetoGrafico]
Wait
FProgWait();
;
;
;
;
1
0
[ObjetoGrafico]
[Version Objeto Grafico]
0
181 146 116 79
[FinObjetoGrafico]
Idle
FProgRequest();
;
;
;
;
1
0
[ObjetoGrafico]
[Version Objeto Grafico]
0
210 380 123 74
[FinObjetoGrafico]
Working
FProgWorking();
;
;
;
;
1
0
[ObjetoGrafico]
[Version Objeto Grafico]
0
420 232 121 80
[FinObjetoGrafico]
[PuntosEleccion]
2
[Version PuntosEleccion]
2
ResReq
1
[ObjetoGrafico]
[Version Objeto Grafico]
0
254 286 35 35
[FinObjetoGrafico]
TryAgain
1
[ObjetoGrafico]
[Version Objeto Grafico]
0
242 68 35 35
[FinObjetoGrafico]
ResReq
1
[Ramas]
2
[Version Ramas]
4
Nack
true
Wait
DSubEst
;
 
 
 
;
;
;
[GraficoRama]
[Version GraficoRama]
0
260 289 216 225 3
[FinGraficoRama]
Ack
GIsAck()
Working
DSubEst
;

 

FGetResId();
;
;
[GraficoRama]
[Version GraficoRama]
0
288 303 420 264 1
[FinGraficoRama]
TryAgain
1
[Ramas]
2
[Version Ramas]
4
Nack
true
Wait
DSubEst
;
 
 
 
;
;
;
[GraficoRama]
[Version GraficoRama]
0
242 85 196 146 2
[FinGraficoRama]
Ack
GIsAck()
Working
DSubEst
;

 

FGetResId();
;
;
[GraficoRama]
[Version GraficoRama]
0
276 85 511 232 0
[FinGraficoRama]
[Transiciones]
4
[Version Transicion]
4
Transicion0
I
OSubEstI
Idle
DSubEst
;
[Trigger]
 
 
true
 
 
 
;
;
;
0
[GraficoTransicion]
[Version GraficoTransicion]
0
109 124 210 435 0
[FinGraficoTransicion]
TryAgain
Wait
OSubEst
TryAgain
DPEleccion
;
[Trigger]
Timer
EDROOMSignalTimeout
true
 
 
 
;
;
FResRequest();
0
[GraficoTransicion]
[Version GraficoTransicion]
0
260 146 259 102 3
[FinGraficoTransicion]
ResReq
Idle
OSubEst
ResReq
DPEleccion
;
[Trigger]
Timer
EDROOMSignalTimeout
true
 
 
 
;
;
FResRequest();
0
[GraficoTransicion]
[Version GraficoTransicion]
0
271 380 271 320 1
[FinGraficoTransicion]
FreeRes
Working
OSubEst
Idle
DSubEst
;
[Trigger]
Timer
EDROOMSignalTimeout
true
 
 
 
;
FFreeRes();
;
0
[GraficoTransicion]
[Version GraficoTransicion]
0
515 312 333 427 2
[FinGraficoTransicion]
[VariablesConstantes]
1
[Version VariYConst]
0
VresId
TEDROOMUInt8

Variable
0
[Metodos]
7
[Version Metodos]
21
Inform
FProgRequest()
0
0
0
0
1
 
2
interval =Pr_Time(3,0);
printf("%s is sleeping\n", EDROOMcomponent.EDROOMName);
[ServiceRequest]
InformIn
Timer
EDROOMSignalTimeout
NULL
EDROOMprioVeryHigh
Inform
FProgWait()
0
0
0
1
#include <stdio.h>
1
 
2
interval=Pr_Time(1,0);
printf("%s is waiting\n", EDROOMcomponent.EDROOMName);
[ServiceRequest]
InformIn
Timer
EDROOMSignalTimeout
NULL
EDROOMprioVeryHigh
Inform
FProgWorking()
0
0
0
1
#include <stdio.h>
1
 
2
interval =Pr_Time(2,0);
printf("%s is working\n", EDROOMcomponent.EDROOMName);
[ServiceRequest]
InformIn
Timer
EDROOMSignalTimeout
NULL
EDROOMprioVeryHigh
InvokeMsg
FResRequest()
0
0
0
0
1
 
0
[ServiceRequest]
invoke
pServReq
SResReq
NULL
EDROOMprioVeryHigh
Guard
GIsAck()
0
0
0
0
1
 
1
return (MsgBack->signal==SResAck);
MsgBackDataHandler
FGetResId()
0
0
0
1
#include <stdio.h>
1

2
VresId = varSResAck;
printf("%s Get ResId %i\n", EDROOMcomponent.EDROOMName, VresId);
[ServiceRequest]
MsgBack->data
pServReq
SResAck
TEDROOMUInt8

SendMsg
FFreeRes()
0
0
0
0
1

4
	
		// Complete Data 
	
	*pSFreeRes_Data=VresId;
[ServiceRequest]
send
pServReq
SFreeRes
TEDROOMUInt8
EDROOMprioNormal
[MaquinasSubEstados]
0
[FinMaquinasSubEstados]
[Fin Maquina de Estados]
[FinComportamiento]
